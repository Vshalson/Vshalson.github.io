{"children":[{"children":[],"uri":"https://www.notion.so/ea557e796b96461193d3e83d1755b208","type":"text","createdTime":1622371560000,"lastEditedTime":1622371800000,"title":[["Container are Linux process."]]},{"children":[],"uri":"https://www.notion.so/25fe723a0b804a51a2741193629d8cec","type":"code","createdTime":1622371620000,"lastEditedTime":1622371740000,"title":[["#Launching Redis contianer\ndocker run -d --name=db redis:alpine\n#Check  Process ID and Prent Process ID\ndocker top db\n# To list sub process use `Pstree`\npstree -c -p -A $(pgrep dockerd)"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/c81e9d53cad54cf4ab1ad0cbd17d9344","type":"text","createdTime":1622371800000,"lastEditedTime":1622371860000,"title":[["Configuration of each process define in /proc dir."]]},{"children":[],"uri":"https://www.notion.so/a48494cfba4e4a51880f5c79f5742df4","type":"quote","color":"pink_background","createdTime":1622371871430,"lastEditedTime":1622371920000,"title":[["Give me process ID, I'll give you config dir.\n- /proc"]]},{"children":[],"uri":"https://www.notion.so/092ea34787304ae88df467e3d9fe17b3","type":"code","createdTime":1622371920000,"lastEditedTime":1622373540000,"title":[["DBPID=$(pgrep redis-server)\necho REDIS is $DBPID\n#here DBPID variable to get Process ID of running redis-server process\nls /proc\nAnd\nls /proc/$DBPID"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/f4f9be40f2664671a64a48a2b2f5cbe9","type":"text","createdTime":1622373480000,"lastEditedTime":1622373480000,"title":[]},{"children":[],"uri":"https://www.notion.so/2939a80980d647e7ab64f1ddf7c23450","type":"text","createdTime":1622372520000,"lastEditedTime":1622373480000,"title":[["Namespaces",[["b",null]]]]},{"children":[],"uri":"https://www.notion.so/1ffe795106bd41fc850344215b8b9488","type":"bulleted_list","createdTime":1622372520000,"lastEditedTime":1622372580000,"title":[["Is to limit what process can see and access certain parts of system"]]},{"children":[{"children":[],"uri":"https://www.notion.so/b5759b36a0294c67b8a0bd319bb5d5a8","type":"text","createdTime":1622372700000,"lastEditedTime":1622372700000,"title":[["https://en.wikipedia.org/wiki/Linux_namespaces",[["a","https://en.wikipedia.org/wiki/Linux_namespaces"]]]]},{"children":[],"uri":"https://www.notion.so/f8a26e08f71a4ccd82e8d3af04a3c653","type":"text","createdTime":1622372640000,"lastEditedTime":1622372640000,"title":[["Available Namespace:"]]},{"children":[],"uri":"https://www.notion.so/8753ec505f3d4671b4fcde5aa92757bf","type":"bulleted_list","createdTime":1622372640000,"lastEditedTime":1622372640000,"title":[["Mount - mnt"]]},{"children":[],"uri":"https://www.notion.so/31aa9f1f26f14cb297094bd4702409dd","type":"bulleted_list","createdTime":1622372640000,"lastEditedTime":1622372640000,"title":[["Network - net"]]},{"children":[],"uri":"https://www.notion.so/e38c559e6ea942af8b6a9988f3f9be67","type":"bulleted_list","createdTime":1622372640000,"lastEditedTime":1622372640000,"title":[["Process ID - pid"]]},{"children":[],"uri":"https://www.notion.so/2c424f56f90149f8b1b6a76a36a9ce6b","type":"bulleted_list","createdTime":1622372640000,"lastEditedTime":1622372700000,"title":[["Control groups - cgroup"]]},{"children":[],"uri":"https://www.notion.so/89c76f3bd79c4057aca71995b84c56c2","type":"bulleted_list","createdTime":1622372700000,"lastEditedTime":1622372700000,"title":[["UTS - hostnames"]]}],"uri":"https://www.notion.so/16b5eb188bde4b2c82d27ca76f379fe9","type":"bulleted_list","createdTime":1622372580000,"lastEditedTime":1622372700000,"title":[["When container started, Docker runtime will create new namespaces to sandbox the process. By running the process in it's own PID namespace."]]},{"children":[],"uri":"https://www.notion.so/fa648c177fed4a8c98a072bc853122ae","type":"text","createdTime":1622372700000,"lastEditedTime":1622372700000,"title":[]},{"children":[{"children":[],"uri":"https://www.notion.so/4fccf1a105ee4cb38e10c60d202f44b6","type":"text","createdTime":1622372760000,"lastEditedTime":1622373780000,"title":[["Without using docker runtime, process can still have it's own namespace."]]},{"children":[],"uri":"https://www.notion.so/81bd85c8d13a4b60ac2a88b10b9d0c2e","type":"code","createdTime":1622372760000,"lastEditedTime":1622372760000,"title":[["unshare --help"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/b49218a640b14922a44f4cb09536a312","type":"text","createdTime":1622373780000,"lastEditedTime":1622373960000,"title":[["Aha, run bash prompt process seprately"]]},{"children":[],"uri":"https://www.notion.so/b9eac858b7d140b093b271b4748cb0fa","type":"code","createdTime":1622373960000,"lastEditedTime":1622373960000,"title":[["sudo unshare --fork --pid --mount-prac bash\nps\n.. continue experimenting your shit\nexit"]],"language":"Bash","wrap":false}],"uri":"https://www.notion.so/fb77e0a773474fe8ae7f1e17da12a16c","type":"text","createdTime":1622372700000,"lastEditedTime":1622373960000,"title":[["Unshare  : to launch \"contained process\", unshared from parent",[["b",null]]]]},{"children":[],"uri":"https://www.notion.so/26e20c8009084ef1a018420bebdead95","type":"text","createdTime":1622372880000,"lastEditedTime":1622373780000,"title":[["What happens when we share a namespace?"]]},{"children":[],"uri":"https://www.notion.so/2edd48e7e19247a7944bd983459e5235","type":"text","createdTime":1622372880000,"lastEditedTime":1622372940000,"title":[["It allows for process to reused the same namespace,allow to view and interact."]]},{"children":[],"uri":"https://www.notion.so/781b8134e5be4c9ca607b75bf59c09e2","type":"image","createdTime":1622372940000,"lastEditedTime":1622372940000,"source":"https://www.notion.so/signed/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2dcb17ac-42b2-4b4b-b662-73e1f8fac683%2FUntitled.png?width=658&table=block&id=781b8134-e5be-4c9c-a607-b75bf59c09e2","caption":[],"width":658,"height":-1,"fullWidth":false,"pageWidth":true,"aspectRatio":0.29027355623100304,"preserveScale":true},{"children":[],"uri":"https://www.notion.so/67f7bd8c4cad4b4bb7ae2b86e628f3e7","type":"text","createdTime":1622372940000,"lastEditedTime":1622373000000,"title":[["NSEnter",[["b",null]]],[" : to attach process to existing Namespace (used for debugging)"]]},{"children":[],"uri":"https://www.notion.so/ac243b517e5e49c6b79be8439de29b8d","type":"code","createdTime":1622373000000,"lastEditedTime":1622374020000,"title":[["nsenter --target $DBPID --mount --uts --ipc --net --pid ps aux\n# target process "]],"language":"Bash","wrap":false},{"children":[{"children":[],"uri":"https://www.notion.so/7480cb1ebe0a4f1aa12c47cbcae5d2c5","type":"text","createdTime":1622374080000,"lastEditedTime":1622374080000,"title":[["Connect ngix to DB namespace"]]},{"children":[],"uri":"https://www.notion.so/c6db3e01d9c84423ac30dbb87734fd23","type":"image","createdTime":1622374200000,"lastEditedTime":1622374200000,"source":"https://www.notion.so/signed/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb3058904-70a3-44d3-b3b1-5ee34695baec%2FUntitled.png?width=659&table=block&id=c6db3e01-d9c8-4423-ac30-dbb87734fd23","caption":[],"width":659,"height":-1,"fullWidth":false,"pageWidth":true,"aspectRatio":0.15781487101669195,"preserveScale":true},{"children":[],"uri":"https://www.notion.so/a9c55683f7f74691be82b0e3b1a17e12","type":"text","createdTime":1622374080000,"lastEditedTime":1622374200000,"title":[["Make variable, WEBPID "],["WEBPID=$(pgre nginx | tail -n1)",[["c",null]]]]},{"children":[],"uri":"https://www.notion.so/bddbfa5a05bd47ebae652b1d89041d4b","type":"text","createdTime":1622374200000,"lastEditedTime":1622374260000,"title":[["Namespace for both process points to same location."]]}],"uri":"https://www.notion.so/fbca75a70385416f98d59314e1282b1d","type":"text","createdTime":1622374020000,"lastEditedTime":1622374440000,"title":[["Using Docker, we can share namespaces "],["container:<container_name>",[["c",null]]],["    "]]},{"children":[],"uri":"https://www.notion.so/a1fe06e75ce9458694baf7ff0464f911","type":"text","createdTime":1622374500000,"lastEditedTime":1622374500000,"title":[]},{"children":[],"uri":"https://www.notion.so/e8d6fb62fd6a4aa7afd122c5e4e46ab0","type":"text","createdTime":1622374260000,"lastEditedTime":1622374500000,"title":[["Control groups (Cgroups) : limit amout of resources a process can consume."]]},{"children":[],"uri":"https://www.notion.so/48a60addbc974ab69d9cfc15a594e5b0","type":"code","createdTime":1622374620000,"lastEditedTime":1622374800000,"title":[["# CHeck cgroup mapping\ncat /proc/$DBPID/cgroup\n# Check CPU stats for process\ncat /sys/fs/cgroup/cpu,cpuacct/docker/$DBID/cpuacct.stat\n# CHeck CPU share limit\ncat /sys/fs/cgroup/cpu,cpuacct/docker/$DBID/cpuacct.shares\n\nDcoker Cgroup stored @ /sys/fs/cgroup/memory/docker/"]],"language":"Bash","wrap":false},{"children":[{"children":[],"uri":"https://www.notion.so/622dc4432713415e890ede5a94b46b71","type":"text","createdTime":1622374800000,"lastEditedTime":1622374800000,"title":[["By default, container have no limit on memory."]]},{"children":[],"uri":"https://www.notion.so/e28f692a9da340469a7fa3f576c6e576","type":"code","createdTime":1622374800000,"lastEditedTime":1622374980000,"title":[["docker stats <container_name> --no-stream"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/ce340e46737f46f5a32fb5df295ee122","type":"text","createdTime":1622375460000,"lastEditedTime":1622375460000,"title":[["To set limits,"]]},{"children":[],"uri":"https://www.notion.so/f49cd74d24874d618c250892a9661e17","type":"code","createdTime":1622375460000,"lastEditedTime":1622375520000,"title":[["echo 8000000 > /sys/fs/cgroup/memory/docker/$DBID/memory.limit_in_bytes\nHere 8000000 in bytes to 7.629 mibibyte"]],"language":"Bash","wrap":false}],"uri":"https://www.notion.so/7a10f867e121480790ed3622bcae8c6a","type":"text","createdTime":1622374800000,"lastEditedTime":1622375640000,"title":[["Docker can control memory limits via Cgroup settings."]]},{"children":[],"uri":"https://www.notion.so/d70e0908cb864cf2a254493234080e4b","type":"image","createdTime":1622375640000,"lastEditedTime":1622375640000,"source":"https://www.notion.so/signed/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F81178178-b50e-4e74-bea7-9758e0440277%2FUntitled.png?width=1222&table=block&id=d70e0908-cb86-4cf2-a254-493234080e4b","caption":[],"width":1222,"height":-1,"fullWidth":false,"pageWidth":true,"aspectRatio":0.18330605564648117,"preserveScale":true},{"children":[],"uri":"https://www.notion.so/53b69f0a797f43468255ff2c8c07ecf6","type":"text","createdTime":1622375700000,"lastEditedTime":1622375700000,"title":[]},{"children":[],"uri":"https://www.notion.so/6fc53ca603b9489dbfa2b443dd7d6ee6","type":"text","createdTime":1622375700000,"lastEditedTime":1622375700000,"title":[]},{"children":[{"children":[],"uri":"https://www.notion.so/ebae56f5b7524a94b5e06f3d1fbaa3a1","type":"text","createdTime":1622375700000,"lastEditedTime":1622375760000,"title":[["All actions with Linux done via syscalls."]]},{"children":[],"uri":"https://www.notion.so/af1443f3b71b4f8eab8ff71b6fffe268","type":"text","createdTime":1622375760000,"lastEditedTime":1622375760000,"title":[["Kernel has 330 syscalls to perform operations."]]},{"children":[],"uri":"https://www.notion.so/5203aa6d9e21404baf5b0e7be5ffb117","type":"text","createdTime":1622375760000,"lastEditedTime":1622375820000,"title":[["All applications use combination of syscalls to perform required operatn."]]},{"children":[],"uri":"https://www.notion.so/71e7c04ec4554d55a90f2502e5d0ca4e","type":"text","createdTime":1622375820000,"lastEditedTime":1622375820000,"title":[["AppArmor is a application defined profile that describes which parts of the system a process can access.",[["b",null]]]]}],"uri":"https://www.notion.so/badabeee85774d0881b937b8d70abf36","type":"text","createdTime":1622375640000,"lastEditedTime":1622375820000,"title":[["AppArmor",[["b",null]]]]},{"children":[],"uri":"https://www.notion.so/d6d011a05149417eb4b20f103939648e","type":"divider","createdTime":1622375700000,"lastEditedTime":1622376180000},{"children":[],"uri":"https://www.notion.so/eda1c36052194c8f9fbf64149dc41931","type":"text","createdTime":1622376180000,"lastEditedTime":1622376180000,"title":[]},{"children":[],"uri":"https://www.notion.so/9e74f9da43e744698fab38876f6ef042","type":"heading","createdTime":1622376217138,"lastEditedTime":1622376600000,"title":[["Scenario : 2"]],"depth":2},{"children":[],"uri":"https://www.notion.so/6c02dd22deeb4e09a2c0f3a902a110f0","type":"text","createdTime":1622376180000,"lastEditedTime":1622376240000,"title":[["Container image: container image is tar file containing tar files. Each tar file is layer. Once all tar file extract into same location then you have container's filesystem."]]},{"children":[],"uri":"https://www.notion.so/e69f734a09ec4a19a92f31582231df77","type":"image","createdTime":1622376660000,"lastEditedTime":1622376660000,"source":"https://www.notion.so/signed/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Feed561f9-77bb-40b1-a924-87c2e7e233ca%2FUntitled.png?width=781&table=block&id=e69f734a-09ec-4a19-a92f-31582231df77","caption":[],"width":781,"height":-1,"fullWidth":false,"pageWidth":true,"aspectRatio":0.9487836107554417,"preserveScale":true},{"children":[],"uri":"https://www.notion.so/2db99bb0592a4dc0986f3607feeb28fd","type":"text","createdTime":1622376600000,"lastEditedTime":1622376660000,"title":[["Image also includes meta deta about version info and tag name."]]},{"children":[],"uri":"https://www.notion.so/74dae127db4042cbb28af33b766c27bc","type":"image","createdTime":1622376840000,"lastEditedTime":1622376840000,"source":"https://www.notion.so/signed/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7e70f63f-82b4-4e03-ad13-fed77eb792be%2FUntitled.png?width=747&table=block&id=74dae127-db40-42cb-b28a-f33b766c27bc","caption":[],"width":747,"height":-1,"fullWidth":false,"pageWidth":true,"aspectRatio":0.34805890227576974,"preserveScale":true},{"children":[],"uri":"https://www.notion.so/2c66120aadb44e5687462e71d2452c83","type":"text","createdTime":1622376960000,"lastEditedTime":1622376960000,"title":[["And extract it further,"]]},{"children":[],"uri":"https://www.notion.so/747bba209ee04816a771f2ec92524190","type":"image","createdTime":1622376960000,"lastEditedTime":1622376960000,"source":"https://www.notion.so/signed/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcfaef57e-3ad0-402f-807c-e2526adf0e3e%2FUntitled.png?width=819&table=block&id=747bba20-9ee0-4816-a771-f2ec92524190","caption":[],"width":819,"height":-1,"fullWidth":false,"pageWidth":true,"aspectRatio":0.33455433455433453,"preserveScale":true},{"children":[],"uri":"https://www.notion.so/f92d24cf8d9d48f9b97c75050281a3e3","type":"divider","createdTime":1622377140000,"lastEditedTime":1622377140000},{"children":[],"uri":"https://www.notion.so/96810433605e4e38b2152b08760c6570","type":"text","createdTime":1622377140000,"lastEditedTime":1622377140000,"title":[]},{"children":[{"children":[],"uri":"https://www.notion.so/9f9c6d181c6544f2bc2230e4953ef1fe","type":"text","createdTime":1622377320000,"lastEditedTime":1622377380000,"title":[["Import tar file to create an image from scratch."]]},{"children":[],"uri":"https://www.notion.so/06dbdc12682443f1972a99c10fa6f8b7","type":"text","createdTime":1622377380000,"lastEditedTime":1622377440000,"title":[["Here busybox (package with standard unix programs) as base."]]}],"uri":"https://www.notion.so/ae7b1c7cac37446f849690344a02c6a0","type":"text","createdTime":1622377158637,"lastEditedTime":1622377440000,"title":[["Create image with dockerfile",[["b",null]]]]},{"children":[],"uri":"https://www.notion.so/24d2fea663b44ed0893dd519815ea5f3","type":"code","createdTime":1622377440000,"lastEditedTime":1622642580000,"title":[["# Download and extract busybox rootfs\ncurl -LO https://raw.githubusercontent.com/moby/moby/a575b0b1384b2ba89b79cbd7e770fbeb616758b3/contrib/mkimage/busybox-static && chmod +x busybox-static\n# To download rootfs and main binaries \n./busybox-static busybox\n# create a file\necho KatacodaPrivateBuild > busybox/release\n# dir can into tar and import into docker as an image.\ntar -C busybox -c . | docker import - busybox\n# launch as container, here to print release\ndocker run busybox cat /release"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/59bd6b49f75d455aaa49b8f424a07e9f","type":"divider","createdTime":1622377320000,"lastEditedTime":1622377740000},{"children":[],"uri":"https://www.notion.so/1702dbced537469990c9276d0dfcf689","type":"heading","createdTime":1622377774508,"lastEditedTime":1622642580000,"title":[["Docker foundations"]],"depth":1},{"children":[],"uri":"https://www.notion.so/77a899acd337449c85e4eede689530dd","type":"heading","createdTime":1622378520000,"lastEditedTime":1622379360000,"title":[["Deploy first Docker Container"]],"depth":3},{"children":[],"uri":"https://www.notion.so/44bb2e7433d94bb5900dc6bfb246f160","type":"code","createdTime":1622379360000,"lastEditedTime":1622381580000,"title":[["# search docker image\ndocker search redis\n\n# Run command in foreground\ndocker run -d redis\n555555"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/f7a55ad07ab848368a724387a00c5b91","type":"text","createdTime":1622394960000,"lastEditedTime":1622394960000,"title":[]},{"children":[],"uri":"https://www.notion.so/4c2ec6b0436f4a1490d18deb9710ac03","type":"heading","createdTime":1622395019289,"lastEditedTime":1622395020000,"title":[["Deploy Static HTML Website as Container"]],"depth":2},{"children":[{"children":[],"uri":"https://www.notion.so/3dbd9dd3663b40098d6dfa958b470443","type":"bulleted_list","createdTime":1622395020000,"lastEditedTime":1622395140000,"title":[["Docker Images start from a base image."]]},{"children":[],"uri":"https://www.notion.so/9a96ccd07d35456b9495e0063f0facc0","type":"bulleted_list","createdTime":1622395020000,"lastEditedTime":1622395080000,"title":[["Base image is defined as instruction in Dockerfile."]]}],"uri":"https://www.notion.so/9a3b5577755840dc94ecdcc2e2c2fa5b","type":"bulleted_list","createdTime":1622395020000,"lastEditedTime":1622395140000,"title":[["Create Dockerfile"]]},{"children":[{"children":[],"uri":"https://www.notion.so/d51d811b02db48908eff0153ef625be8","type":"bulleted_list","createdTime":1622395140000,"lastEditedTime":1622395200000,"title":[["Build command takes in some diff parameters."]]},{"children":[],"uri":"https://www.notion.so/a4dbc648d8a44e168adf1b69b3513f14","type":"code","createdTime":1622395200000,"lastEditedTime":1622395260000,"title":[["# Build our static HTML\ndocker build -t webserver-image:v1 ."]],"language":"Bash","wrap":false}],"uri":"https://www.notion.so/b4db793f910446a1848fb58443aab46b","type":"bulleted_list","createdTime":1622395080000,"lastEditedTime":1622395380000,"title":[["Build Docker Image"]]},{"children":[{"children":[],"uri":"https://www.notion.so/7508164d4c594ac0b1d310df05be907e","type":"bulleted_list","createdTime":1622395380000,"lastEditedTime":1622395440000,"title":[["When container launches, it's sandboxed from other processes and networks on the host."]]},{"children":[],"uri":"https://www.notion.so/7cb35323d10c45c6bde5c0ede9364357","type":"code","createdTime":1622395440000,"lastEditedTime":1622397720000,"title":[["docker run -d -p 80:80 webserver-image:v1\n\t-d : run in background\n\t-p : bind port"]],"language":"Bash","wrap":false}],"uri":"https://www.notion.so/a5d3491b33144d2ea31e6535a0d38086","type":"bulleted_list","createdTime":1622395260000,"lastEditedTime":1622397660000,"title":[["Run "]]},{"children":[],"uri":"https://www.notion.so/31ce8218b874405aabbe12f3dc9bfaf7","type":"divider","createdTime":1622395440000,"lastEditedTime":1622397720000},{"children":[],"uri":"https://www.notion.so/b13ac6e4df9f4fbd9eed46bef4345f9b","type":"heading","createdTime":1622397720593,"lastEditedTime":1622397720000,"title":[["Optimise Dockerfile with OnBuild"]],"depth":3},{"children":[],"uri":"https://www.notion.so/b70fea73249243acac4e0576ad0fb7c3","type":"text","createdTime":1622397720000,"lastEditedTime":1622397840000,"title":[["Dockerfile executes in order from top to bottom, one can trigger instruction to execute later time when image is used as base for another image."]]},{"children":[],"uri":"https://www.notion.so/1735a89ae91240da9d33db7bedfbb3e2","type":"image","createdTime":1622397960000,"lastEditedTime":1622397960000,"source":"https://www.notion.so/signed/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F13addfcf-0d6c-4527-9521-c10f91565282%2FUntitled.png?width=582&table=block&id=1735a89a-e912-40da-9d33-db7bedfbb3e2","caption":[],"width":582,"height":-1,"fullWidth":false,"pageWidth":true,"aspectRatio":0.570446735395189,"preserveScale":true},{"children":[],"uri":"https://www.notion.so/5ec9cbf03e334975a8bdabca9f45d038","type":"text","createdTime":1622397960000,"lastEditedTime":1622398020000,"title":[["(Image Source: "],["https://katacoda.com/courses/docker/4",[["a","https://katacoda.com/courses/docker/4"]]],[" )"]]},{"children":[],"uri":"https://www.notion.so/d37816bfc86048849aaa9029d06f4795","type":"text","createdTime":1622397960000,"lastEditedTime":1622398020000,"title":[["Application Dockerfile"]]},{"children":[],"uri":"https://www.notion.so/d4893264ddff4ea8af3bb14d86970fd6","type":"image","createdTime":1622398080000,"lastEditedTime":1622398080000,"source":"https://www.notion.so/signed/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8f352165-c254-4c7f-a384-a42cc70de843%2FUntitled.png?width=592&table=block&id=d4893264-ddff-4ea8-af3b-b14d86970fd6","caption":[],"width":592,"height":-1,"fullWidth":false,"pageWidth":true,"aspectRatio":0.28885135135135137,"preserveScale":true},{"children":[],"uri":"https://www.notion.so/d9520b2d6901490b9d68986ac6d7f18d","type":"text","createdTime":1622398140000,"lastEditedTime":1622398140000,"title":[]},{"children":[],"uri":"https://www.notion.so/1cf9b0d51d2646ad822f7434ab910ecc","type":"text","createdTime":1622398140000,"lastEditedTime":1622398260000,"title":[["Just like we have .gitignore, to prevent files or dir from include by mistake in images."]]},{"children":[],"uri":"https://www.notion.so/ae06dab082714b6caab501de9b346808","type":"quote","createdTime":1622398310744,"lastEditedTime":1622398620000,"title":[["If you need to use the passwords as part of a "],["RUN",[["b",null]]],[" command then you need to copy, execute and delete the files as part of "],["a single RUN command",[["b",null]]],[". Only the final state of the Docker container is persisted inside the image."]]},{"children":[],"uri":"https://www.notion.so/e8b9654a92aa4ee699fa0ec9290c3801","type":"divider","createdTime":1622398620000,"lastEditedTime":1622398620000},{"children":[],"uri":"https://www.notion.so/da5f8e8f70c0416daac01eb8c9fd3970","type":"heading","createdTime":1622398626704,"lastEditedTime":1622398620000,"title":[["Data container"]],"depth":2},{"children":[],"uri":"https://www.notion.so/1bc01418a9c64f20b41f2022d5c64f86","type":"text","createdTime":1622398620000,"lastEditedTime":1622398620000,"title":[["Responsible to be place to store or manage data."]]},{"children":[],"uri":"https://www.notion.so/85d605bc9746453e8341ab5fef4958a4","type":"text","createdTime":1622398620000,"lastEditedTime":1622398680000,"title":[["It's managed by host system but don't run on "],["docker ps",[["c",null]]]]},{"children":[],"uri":"https://www.notion.so/e677eed3063d470388600bd885fdcfaf","type":"text","createdTime":1622398680000,"lastEditedTime":1622398740000,"title":[["Scenario: "]]},{"children":[],"uri":"https://www.notion.so/003f1ffc9b5a43718d3717e316b4520d","type":"code","createdTime":1622398680000,"lastEditedTime":1622399100000,"title":[["# Create data container for storing config files using\ndocker create -v /config --name dataContainer busybox\n\n# COpy file using cp, here copy config.conf to dataContainer\ndocker cp config.conf dataContainer:/config/\n\n# Mount using --volumes-from\ndocker run --volumes-from dataContainer ubuntu ls /config\n\n# Export/Import Containers, move to another machine\ndocker export dataContainer > dataContainer.tar\ndocker import dataContainer.tar"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/3de982dd4f2942a1b351783cec5a4ea6","type":"text","createdTime":1622398920000,"lastEditedTime":1622429280000,"title":[["Here, DataContainer has our config file, we reference the container when we launch depended container here ubuntu one."]]},{"children":[],"uri":"https://www.notion.so/90f41cbe930e4eb8a22bd3d7b38e2771","type":"heading","createdTime":1622429280000,"lastEditedTime":1622429280000,"title":[["Communicating between Containers"]],"depth":2},{"children":[],"uri":"https://www.notion.so/b40b4458bbbf404eb543c4f55bb75623","type":"text","createdTime":1622429520000,"lastEditedTime":1622429580000,"title":[["Define friendly name container you're connecting to."]]},{"children":[],"uri":"https://www.notion.so/2a3500b291c1414faf2dd52b32c3bb5d","type":"text","createdTime":1622429580000,"lastEditedTime":1622429580000,"title":[["Scenario:"]]},{"children":[{"children":[],"uri":"https://www.notion.so/25d593e78515401fb646e9396f6c80f8","type":"code","createdTime":1622429580000,"lastEditedTime":1622429580000,"title":[["docker run -d --name redis-server redis"]],"language":"Bash","wrap":false}],"uri":"https://www.notion.so/af7015eaaefa44dca4475b2edce7043a","type":"bulleted_list","createdTime":1622429580000,"lastEditedTime":1622429580000,"title":[["Start Data store with friendly name"]]},{"children":[{"children":[],"uri":"https://www.notion.so/7025824de3dd42f684be3498a5263013","type":"text","createdTime":1622429700000,"lastEditedTime":1622430240000,"title":[["The link updates /etc/hosts and environment variables to allow containers to discover and communicate"]]},{"children":[],"uri":"https://www.notion.so/1c2fc960c18a48639ebbd3084b8ad0b7","type":"code","createdTime":1622429880000,"lastEditedTime":1622430240000,"title":[["# output env variable with env command\ndocker run --link redis-server:redis alpine env\n\n# It will update HOSTS file wiht entry for source container for source container with three names, the **original**, the **alias** and **hash-id.**\n# output container host entry\ndocker run --link redis-server:redis alpine cat /etc/hostss"]],"language":"Bash","wrap":false}],"uri":"https://www.notion.so/3a436de0050f4581be5ccc09088b6b9f","type":"bulleted_list","createdTime":1622429580000,"lastEditedTime":1622430240000,"title":[["When link created, Docker will do"]]},{"children":[],"uri":"https://www.notion.so/ed5697aa151349729945d50a81c8acb7","type":"bulleted_list","createdTime":1622429880000,"lastEditedTime":1622430000000,"title":[["Connect to App, applications can connect and communicate with source container in usual way."]]},{"children":[],"uri":"https://www.notion.so/8d4cd569838240fb8d6b90326c398fec","type":"code","createdTime":1622430000000,"lastEditedTime":1622431920000,"title":[["docker run -d -p 3000:3000 --link redis-server:redis katacoda/redis-node-docker-example"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/7f810be378b64d1db4aef19816b24883","type":"heading","createdTime":1622430240000,"lastEditedTime":1622430240000,"title":[["Docker network"]],"depth":2},{"children":[],"uri":"https://www.notion.so/39c4d135a3634f9491466bb32b4a9712","type":"text","createdTime":1622430240000,"lastEditedTime":1622430300000,"title":[["Similar to physical network, allow container to come and go more freely than using links."]]},{"children":[{"children":[],"uri":"https://www.notion.so/106da6fca63f4c3bbed9a234494a5708","type":"text","createdTime":1622430720000,"lastEditedTime":1622430720000,"title":[["Network allow us to attach multiple containers which able to discover each other."]]},{"children":[],"uri":"https://www.notion.so/17c0a6342159457c962ee3353ff2dd2d","type":"code","createdTime":1622430720000,"lastEditedTime":1622430840000,"title":[["# create network with predefined name\ndocker network create backend-network\n\n# launch new container, --net flag to assign network\ndocker run -d --name=redis --net=backend-network redis"]],"language":"Bash","wrap":false}],"uri":"https://www.notion.so/89bf909d31b24142807a380c8b07eaed","type":"bulleted_list","createdTime":1622430300000,"lastEditedTime":1622430960000,"title":[["Create Network"]]},{"children":[{"children":[],"uri":"https://www.notion.so/526508e4555945819ff75eb7a93317f3","type":"text","createdTime":1622430960000,"lastEditedTime":1622430960000,"title":[["Here Docker not assigns env variables or updates host file of containers."]]},{"children":[],"uri":"https://www.notion.so/04796edb9d0f405bac75678176d2ef28","type":"text","createdTime":1622430960000,"lastEditedTime":1622431020000,"title":[["Instead, container communicate via Embedded DNS server in Docker. DNS assign to all container via IP 127.0.0.11 and set "],["resolve.conf",[["c",null]]],[" file."]]},{"children":[],"uri":"https://www.notion.so/e181c39440de4377bcb78dd6805ae03a","type":"text","createdTime":1622431020000,"lastEditedTime":1622431260000,"title":[["When containers try access other container via well-known name, as Redis, DNS server will return IP addr of correct container."]]},{"children":[],"uri":"https://www.notion.so/1a0622113efa4b91abab5f4b96fb28d1","type":"code","createdTime":1622431260000,"lastEditedTime":1622431260000,"title":[["docker run --net=backend-network alpine ping -c1 redis"]],"language":"Bash","wrap":false}],"uri":"https://www.notion.so/2b27c1f6e1b444f180a35daf8f1f3293","type":"bulleted_list","createdTime":1622430720000,"lastEditedTime":1622431380000,"title":[["Network Communication"]]},{"children":[{"children":[],"uri":"https://www.notion.so/7bcaa78da6b74cdb91a9f10c276f02aa","type":"text","createdTime":1622431380000,"lastEditedTime":1622431380000,"title":[["Docker supports multiple network and container being attached to more than one network at same time."]]},{"children":[],"uri":"https://www.notion.so/3a12fbd0b6bd46d598ddca8005e9f180","type":"code","createdTime":1622431440000,"lastEditedTime":1622431500000,"title":[["# create network\ndocker network create frontend-network\n\n# connect command to attach existing container\ndocker network connect frontend-network redis\n\n# launch web-server, it'll communicate with redis instance\ndocker run -d -p 3000:3000 --net=frontend-network katacoda/redis-node-docker-example"]],"language":"Bash","wrap":false}],"uri":"https://www.notion.so/ac3d1da18d6548f9969491fac1618d65","type":"bulleted_list","createdTime":1622431260000,"lastEditedTime":1622431560000,"title":[["Connect Two containers"]]},{"children":[{"children":[],"uri":"https://www.notion.so/d5a81775c8ef421c80cd56caac73e27b","type":"code","createdTime":1622431560000,"lastEditedTime":1622431680000,"title":[["# list networks on host\ndocker network ls\n\n# explore network to see containers attach and their IP addr\ndocker network inspect frontend-network\n\n# disconnect redis container from frontend-network\ndocker network disconnect frontend-network redis"]],"language":"Bash","wrap":false}],"uri":"https://www.notion.so/177ef8d16e2d4b239929ca41db20a41e","type":"bulleted_list","createdTime":1622431560000,"lastEditedTime":1622431920000,"title":[["Disconnect Container"]]},{"children":[],"uri":"https://www.notion.so/6a34e3bd373c4ff3a46ca93440f2b9d4","type":"divider","createdTime":1622431920000,"lastEditedTime":1622431920000},{"children":[],"uri":"https://www.notion.so/f2bb6fda7bd34f5cad920333dbaecc93","type":"heading","createdTime":1622431947476,"lastEditedTime":1622432100000,"title":[["Persisting Data using Volumes"]],"depth":2},{"children":[],"uri":"https://www.notion.so/87107f3721c24d68b0d6f74f5ca63bd0","type":"code","createdTime":1622431980000,"lastEditedTime":1622432460000,"title":[["# Starting redis container, -v : create data volume.\ndocker run -v /docker/redis-data:/data --name r1 -d redis \\\n\tredis-server --appendonly yes\n\n# Pipe data into redis instance using \ncat data | docker exec -i r1 redis-cli --pipe\n\n# Same dir can be mounted to second container, here for backup operation\ndocker run -v /docker/redis-data:/backup ubuntu ls /backup\n\n# --volumes-from : maps the mapped volume from source to container being launched\ndocker run --volumes-from r1 -it ubuntu ls /data\n\n# Mounting container can be prone to write, here specify read-only `:ro`\ndocker run -v /docker/redis-data:/data:ro -it ubuntu rm -rf /data"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/826dd855b44e4f8baace567c81e216f1","type":"text","createdTime":1622432520000,"lastEditedTime":1622432520000,"title":[]},{"children":[],"uri":"https://www.notion.so/8c78cdbedfc149b4986d3d3c305557f1","type":"heading","createdTime":1622432520000,"lastEditedTime":1622432520000,"title":[["Managing Log Files"]],"depth":2},{"children":[],"uri":"https://www.notion.so/723bb8db563a42e597244f2d5da88bb5","type":"text","createdTime":1622432520000,"lastEditedTime":1622432760000,"title":[["Docker will track standard out and standard error output"]]},{"children":[],"uri":"https://www.notion.so/59f44c5b77734cd8bd5ec14b5d9b369e","type":"code","createdTime":1622432760000,"lastEditedTime":1622432820000,"title":[["# to retrieve logs\ndocker logs redis-server"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/2bed45edeaaa440f833aa68f4bf5e4cb","type":"callout","color":"blue_background","createdTime":1622433719082,"lastEditedTime":1622434020000,"icon":"🧭","title":[["syslog is a widely used standard for message logging. It permits separation of the software that generates messages, the system that stores them, and the software that reports and analyses them"]]},{"children":[],"uri":"https://www.notion.so/a917ffd60ebe483d9ed55335b846f5b3","type":"code","createdTime":1622433720000,"lastEditedTime":1622434140000,"title":[["# command to redirect redis logs to syslog\ndocker run -d --name redis-syslog --log-driver=syslog redis\n\n# Docker inspect to identify logging config for particular container\n$ docker inspect --format '{{ .HostConfig.LogConfig }}' redis-server\n{json-file map[]}\n$ docker inspect --format '{{ .HostConfig.LogConfig }}' redis-syslog\n{syslog map[]}"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/f0d07c4c46794354b37e4823eb0ed73a","type":"text","createdTime":1622434380000,"lastEditedTime":1622434380000,"title":[]},{"children":[],"uri":"https://www.notion.so/b2af14472b7447e9afeec5293afda74e","type":"heading","createdTime":1622434380000,"lastEditedTime":1622434440000,"title":[["Ensuring Uptime"]],"depth":2},{"children":[],"uri":"https://www.notion.so/9dc5be17238844e19a785a6d3ef07b46","type":"text","createdTime":1622434440000,"lastEditedTime":1622435220000,"title":[["Docker consider containers to exit with non-zero exit code as crashed, default crash container remain stopped."]]},{"children":[],"uri":"https://www.notion.so/04ddf85f59e941b98a3c051548ef919b","type":"text","createdTime":1622435340000,"lastEditedTime":1622435340000,"title":[["Here we evaulate log, to diagnose the issue."]]},{"children":[],"uri":"https://www.notion.so/006a832c825c43eb993ca258282efbc2","type":"text","createdTime":1622435400000,"lastEditedTime":1622435460000,"title":[["Flag "],["--restart=on-failure:#",[["c",null]]],[" allows you to say how many times Docker should try again."]]},{"children":[],"uri":"https://www.notion.so/2c9735fe6ee240a8b6469fd8bb7a6da7","type":"text","createdTime":1622435400000,"lastEditedTime":1622435460000,"title":[["--restart=always",[["c",null]]],[" flag to automatically restart the container when is crashes"]]},{"children":[],"uri":"https://www.notion.so/4ae9948240b04c0aa39a86850182bc53","type":"image","createdTime":1622435220000,"lastEditedTime":1622435220000,"source":"https://www.notion.so/signed/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff4c50a83-ca42-472b-814e-c0e2e15828bc%2FUntitled.png?width=947&table=block&id=4ae99482-40b0-4c0a-a39a-86850182bc53","caption":[],"width":947,"height":-1,"fullWidth":false,"pageWidth":true,"aspectRatio":0.3812038014783527,"preserveScale":true},{"children":[],"uri":"https://www.notion.so/3411df657a2444d6acc015c69685da9b","type":"image","createdTime":1622435340000,"lastEditedTime":1622435340000,"source":"https://www.notion.so/signed/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff927e055-0ed6-4264-9045-1e831aa1dedd%2FUntitled.png?width=951&table=block&id=3411df65-7a24-44d6-acc0-15c69685da9b","caption":[],"width":951,"height":-1,"fullWidth":false,"pageWidth":true,"aspectRatio":0.3186119873817035,"preserveScale":true},{"children":[],"uri":"https://www.notion.so/1030da86da04468693f3c2cf3b82b549","type":"text","createdTime":1622435640000,"lastEditedTime":1622435640000,"title":[]},{"children":[],"uri":"https://www.notion.so/57a6649e48b84abdad01bb6a75802428","type":"heading","createdTime":1622435340000,"lastEditedTime":1622435640000,"title":[["Docker Metadata & Labels"]],"depth":2},{"children":[],"uri":"https://www.notion.so/047a7b4f69204f6694aa8765c110719c","type":"text","createdTime":1622435640000,"lastEditedTime":1622435760000,"title":[["For containers in production, it's helpful to add metadata related to container like version details, who owns it or criteria which server they shud run on."]]},{"children":[],"uri":"https://www.notion.so/0c6e367068df415ab0e7b9a71d3fbc39","type":"text","createdTime":1622435760000,"lastEditedTime":1622435820000,"title":[["Additional data managed via Docker Labels, it allows us to define custom metadata about container or image which inspected or used as part of filter."]]},{"children":[{"children":[],"uri":"https://www.notion.so/69d5301bc39549beb265b71b804a2815","type":"code","createdTime":1622436540000,"lastEditedTime":1622436540000,"title":[["docker run -l user=12345 -d redis"]],"language":"Bash","wrap":false}],"uri":"https://www.notion.so/1a7c4da343a0447c8256cadc3b988bf5","type":"bulleted_list","createdTime":1622435820000,"lastEditedTime":1622436540000,"title":[["Single Label : "],["l=<value>",[["c",null]]]]},{"children":[{"children":[],"uri":"https://www.notion.so/f2bef15254ba4cf99830c5598097bfa6","type":"code","createdTime":1622436540000,"lastEditedTime":1622436660000,"title":[["# one label for user and second for role\necho 'user=12345` >> labels && echo 'role=cache' >> labels\n# --labels-file=labels\ndocker run --label-file=labels -d redis"]],"language":"Bash","wrap":false}],"uri":"https://www.notion.so/d91ce2e6311d47cea0cb951a64b34aba","type":"bulleted_list","createdTime":1622436540000,"lastEditedTime":1622436660000,"title":[["External File : while adding multiple labels, add through external file"]]},{"children":[],"uri":"https://www.notion.so/1b7b5771ce8f4bd5bf899e259dc8b148","type":"text","createdTime":1622436660000,"lastEditedTime":1622437200000,"title":[["In case of Dockerfile,",[["b",null]]]]},{"children":[],"uri":"https://www.notion.so/76ce3ec6759946af88ebbd0ce8f5668e","type":"image","createdTime":1622436720000,"lastEditedTime":1622436720000,"source":"https://www.notion.so/signed/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F9516fd26-c777-47c9-9a19-2aae5e1b7e49%2FUntitled.png?width=597&table=block&id=76ce3ec6-7599-46af-88eb-bd0ce8f5668e","caption":[],"width":597,"height":-1,"fullWidth":false,"pageWidth":true,"aspectRatio":0.6381909547738693,"preserveScale":true},{"children":[],"uri":"https://www.notion.so/8a6e9e42998e4811ae37106519ebf612","type":"text","createdTime":1622436780000,"lastEditedTime":1622436780000,"title":[["To view labels of container or image, use inspect"]]},{"children":[],"uri":"https://www.notion.so/a767b302afbe4810b00aa120e9fe99db","type":"code","createdTime":1622436780000,"lastEditedTime":1622436840000,"title":[["docker inspect <container_name/image_name>"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/d0457c29acbc4cc5a69604903dea4daa","type":"text","createdTime":1622437200000,"lastEditedTime":1622437260000,"title":[["Daemon Labels",[["b",null]]]]},{"children":[],"uri":"https://www.notion.so/af5623cc0203448e86462bd98b600da5","type":"text","createdTime":1622437260000,"lastEditedTime":1622437260000,"title":[["When launch instance of daemon, assign label to identify how it should be used."]]},{"children":[],"uri":"https://www.notion.so/574e287db7cb4448963010d1e4962d92","type":"code","createdTime":1622437260000,"lastEditedTime":1622437320000,"title":[["docker -d -H unix:///var/rn/docker.sock \\\n\t--label com.katacoda.environment=\"production\""]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/5c71fc36c6854e7f85a9a79773eaefb4","type":"text","createdTime":1622437440000,"lastEditedTime":1622437440000,"title":[]},{"children":[],"uri":"https://www.notion.so/a873f3df84ec4e50ab65d95841186a50","type":"text","createdTime":1622437440000,"lastEditedTime":1622437440000,"title":[]},{"children":[],"uri":"https://www.notion.so/2fd5597d3b814bedb6243a5fd3f1f445","type":"heading","createdTime":1622437440000,"lastEditedTime":1622437500000,"title":[["Load Balancing Containers"]],"depth":2},{"children":[],"uri":"https://www.notion.so/809ce27b2e4c49e99bf34c448e9353ec","type":"text","createdTime":1622437500000,"lastEditedTime":1622437560000,"title":[["Here, we use the NGINX web server to load balance requests between two containers running on the host"]]},{"children":[],"uri":"https://www.notion.so/954b76ff977d4369b496caf1f97bcabb","type":"text","createdTime":1622437525555,"lastEditedTime":1622437500000,"title":[["The Service Discovery pattern is where the application uses a third party system to identify the location of the target service. For example, if our application wanted to talk to a database, it would first ask an API what the IP address of the database is."]]},{"children":[],"uri":"https://www.notion.so/033085b2941d45438e6fce6d9e46b97b","type":"text","createdTime":1622438040000,"lastEditedTime":1622446740000,"title":[["Step 1 - NGINX Proxy",[["b",null]]]]},{"children":[],"uri":"https://www.notion.so/e14681570dd7440e872da44074f28924","type":"text","createdTime":1622446020000,"lastEditedTime":1622446020000,"title":[["Nginx service running → dynamically discovery and update load balance configuration when new containers loaded."]]},{"children":[],"uri":"https://www.notion.so/e50c7758d4a54719b7cee96235c98cfc","type":"text","createdTime":1622446200000,"lastEditedTime":1622446200000,"title":[["Properties -",[["b",null]]]]},{"children":[],"uri":"https://www.notion.so/40d982e44d48469f8e9c14bf177381c4","type":"bulleted_list","createdTime":1622446200000,"lastEditedTime":1622446260000,"title":[["First Port binding : here -p 80:80"]]},{"children":[],"uri":"https://www.notion.so/f639e07ef147477689d0941bb99a1a3b","type":"bulleted_list","createdTime":1622446260000,"lastEditedTime":1622446320000,"title":[["Second mount docker.sock file, it's connection to docker daemon running on host; -v /var/run/docker.sock:/tmp/docker.sock:ro "]]},{"children":[],"uri":"https://www.notion.so/389bfbef6f1e4d5aa3d8d6e7883f25d4","type":"bulleted_list","createdTime":1622446320000,"lastEditedTime":1622446500000,"title":[["Third if request comes and it doesn't make to specified host, then this default container will handle request : -e DEFAULTHOST=<domain>"]]},{"children":[],"uri":"https://www.notion.so/75c6c458dd01455e834d8830408cf352","type":"code","createdTime":1622446500000,"lastEditedTime":1622446560000,"title":[["docker run -d -p 80:80 -e DEFAULT_HOST=proxy.example -v /var/run/docker.sock:/tmp/docker.sock:ro --name nginx jwilder/nginx-proxy"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/9f040ea834b644f8a6a8382527252283","type":"text","createdTime":1622446740000,"lastEditedTime":1622447280000,"title":[["Step 2 - Launch Contianer",[["b",null]]]]},{"children":[],"uri":"https://www.notion.so/756ed80862f24cd8b77f61b892bb02e9","type":"text","createdTime":1622446800000,"lastEditedTime":1622446800000,"title":[["Specify VIRTUAL_HOST env variable, to define the domain where requests will come from and should be handled by container."]]},{"children":[],"uri":"https://www.notion.so/a3e001bf2e3d43d2879bb7f32bcea2f1","type":"code","createdTime":1622446800000,"lastEditedTime":1622447400000,"title":[["docker run -d -p 80 -e VIRTUAL_HOST=proxy.example katacoda/docker-http-server"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/8f050304431e46ad9c2cb0be3c000bd3","type":"text","createdTime":1622446860000,"lastEditedTime":1622447280000,"title":[["Step 3 - Cluster",[["b",null]]]]},{"children":[],"uri":"https://www.notion.so/f8fba288352c41cab6d4f18055621559","type":"text","createdTime":1622447280000,"lastEditedTime":1622447340000,"title":[["Launch second container on same Vhost, after nginx-proxy configure the system in round-robin load balance (the first request will go to one container, the second request to a second container and then repeat in a circle)."]]},{"children":[],"uri":"https://www.notion.so/2eed2a02130145ae88c62327eca96c34","type":"code","createdTime":1622447340000,"lastEditedTime":1622447400000,"title":[["# second container\ndocker run -d -p 80 -e VIRTUAL_HOST=proxy.example katacoda/docker-http-server"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/20d0831ab55e42a38e91ad725564e080","type":"text","createdTime":1622447640000,"lastEditedTime":1622447700000,"title":[["Step 4 - Auto generated NGINX config",[["b",null]]]]},{"children":[],"uri":"https://www.notion.so/ae38709339cf46e8858a50d979a6db4c","type":"text","createdTime":1622447700000,"lastEditedTime":1622452440000,"title":[["Nginx-proxy auto create and configs nginx, to check final config file."]]},{"children":[],"uri":"https://www.notion.so/94f5599da41242ef84997e334aa285c2","type":"code","createdTime":1622447700000,"lastEditedTime":1622459880000,"title":[["docker exec nginx cat /etc/nginx/conf.d/default.conf"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/1e8e01f18bff4e17ab090ae6666b967a","type":"image","createdTime":1622452620000,"lastEditedTime":1622452620000,"source":"https://www.notion.so/signed/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Faacc0288-078a-41a9-90a1-890bc0ce5adb%2FUntitled.png?width=1216&table=block&id=1e8e01f1-8bff-4e17-ab09-0ae6666b967a","caption":[],"width":1216,"height":-1,"fullWidth":false,"pageWidth":true,"aspectRatio":0.2837171052631579,"preserveScale":true},{"children":[],"uri":"https://www.notion.so/081f0973473a42e896bae3edc8eb9302","type":"divider","createdTime":1622458800000,"lastEditedTime":1622458800000},{"children":[],"uri":"https://www.notion.so/f54b85c7e4274f16bc29d642332f5e32","type":"heading","createdTime":1622458830102,"lastEditedTime":1622458800000,"title":[["Docker-Compose"]],"depth":2},{"children":[],"uri":"https://www.notion.so/abe766cec82d4588ac481cac672fdf83","type":"code","createdTime":1622458800000,"lastEditedTime":1622459220000,"title":[["# to see details of launched container\ndocker-compose ps\n\n# access logs via stream\ndocker-compose logs\n\n# scale the number of web containers, following will scale no of web container\ndocker-compose scale web=3 \n# scale down back to one\ndocker-compose scale web=1\n\n# docker stop\ndocker-compose stop"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/a13ca16dae6142209e333fd54a2b4d16","type":"heading","createdTime":1622459888728,"lastEditedTime":1622459940000,"title":[["Docker stats"]],"depth":2},{"children":[],"uri":"https://www.notion.so/fee8e0787af64303bf60152dc889fcae","type":"code","createdTime":1622459940000,"lastEditedTime":1622460000000,"title":[["# For single container\ndocker stats nginx\n\n# For multiple container\ndocker ps -q | xargs docker stats"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/5576216c13e04288ac905f7ed4086d42","type":"heading","createdTime":1622460120000,"lastEditedTime":1622460120000,"title":[["Formatting Docker ps output"]],"depth":2},{"children":[],"uri":"https://www.notion.so/9bc47669acb94567a0c7dc5a4345e081","type":"image","createdTime":1622460180000,"lastEditedTime":1622460180000,"source":"https://www.notion.so/signed/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8c56ecbe-414b-4340-a94f-4303e935a49f%2FUntitled.png?width=1245&table=block&id=9bc47669-acb9-4567-a0c7-dc5a4345e081","caption":[],"width":1245,"height":-1,"fullWidth":false,"pageWidth":true,"aspectRatio":0.1823293172690763,"preserveScale":true},{"children":[],"uri":"https://www.notion.so/418fbcd9ed094c208deeeab048d91ebd","type":"text","createdTime":1622460180000,"lastEditedTime":1622460180000,"title":[["Here, docker ps output name, image used, command, uptime and port info."]]},{"children":[],"uri":"https://www.notion.so/dea7149674994d00a734f1a2e6f4dacd","type":"text","createdTime":1622460180000,"lastEditedTime":1622460240000,"title":[["To limit column displayed, —format '_pattern'"]]},{"children":[],"uri":"https://www.notion.so/12e2003e90a843baa38c6bd516113f67","type":"bulleted_list","createdTime":1622460240000,"lastEditedTime":1622460240000,"title":[["Print name and Image"]]},{"children":[],"uri":"https://www.notion.so/330345d49a5348b1b030593dc97140c7","type":"code","createdTime":1622460240000,"lastEditedTime":1622460540000,"title":[["# print in single line\ndocker ps --format '{{.Name}} container is using {{.Imgae}} image'\n# print in table format\ndocker ps --format 'table {{.Name}}\\t{{.Image}}'\n\n# print all ip addr for running container\ndocker ps -q | xargs docker inspect --format '{{ .Id }} - {{ .Name }} - {{ .NetworkSettings.IPAddress }}'"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/d3ef8079b4904455823e0912d755bf86","type":"image","createdTime":1622460540000,"lastEditedTime":1622460540000,"source":"https://www.notion.so/signed/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fbe90bbee-775e-4f6d-a2be-aa8b01726110%2FUntitled.png?width=984&table=block&id=d3ef8079-b490-4455-823e-0912d755bf86","caption":[],"width":984,"height":-1,"fullWidth":false,"pageWidth":true,"aspectRatio":0.8099593495934959,"preserveScale":true},{"children":[],"uri":"https://www.notion.so/5d8612a25ff6437e8f3b1109a11ae603","type":"text","createdTime":1622460540000,"lastEditedTime":1622460540000,"title":[["(source : "],["https://docs.docker.com/engine/reference/commandline/ps/",[["a","https://docs.docker.com/engine/reference/commandline/ps/"]]],[" )"]]},{"children":[],"uri":"https://www.notion.so/0da5fb74eaf34569aa460dbbec19f92d","type":"text","createdTime":1622460780000,"lastEditedTime":1622460780000,"title":[]},{"children":[],"uri":"https://www.notion.so/724260182f4044fca48f4970abba5c08","type":"heading","createdTime":1622460780000,"lastEditedTime":1622460780000,"title":[["Rootless Docker"]],"depth":2},{"children":[],"uri":"https://www.notion.so/74946d129ea64150bc794965082171a0","type":"text","createdTime":1622460780000,"lastEditedTime":1622462940000,"title":[["Rootless Docker is a project from Docker that removes the requirement for the Docker Daemon to be started by a root. This creates a more secure environment."]]},{"children":[],"uri":"https://www.notion.so/132ac886ee0e43aa82da4e6f79c57b1d","type":"heading","createdTime":1622462940000,"lastEditedTime":1622462940000,"title":[["Swarm mode"]],"depth":1},{"children":[],"uri":"https://www.notion.so/e76564ba0a6647ae9603ec7d1ff75c9d","type":"text","createdTime":1622462940000,"lastEditedTime":1622463720000,"title":[["It enables ability to deploy container across multiple Docker hosts, using overlay network for service discovery with build-in load balancer."]]},{"children":[],"uri":"https://www.notion.so/4c95dd58b77d49168ab61b3b0d52a2cb","type":"text","createdTime":1622463720000,"lastEditedTime":1622463780000,"title":[["Concepts :"]]},{"children":[],"uri":"https://www.notion.so/b4a3e5fb8c7642bebc0ff28a7a01284f","type":"bulleted_list","createdTime":1622463780000,"lastEditedTime":1622463840000,"title":[["Node ",[["b",null]]],[": instance of docker engine connected to swarm. Nodes are either workers or managers. Manager schedule which container to run where and workers execute the task."]]},{"children":[],"uri":"https://www.notion.so/80d8d0fee5e749d7b3110f694ed0ed6f","type":"bulleted_list","createdTime":1622463840000,"lastEditedTime":1622463900000,"title":[["Services ",[["b",null]]],[": collection of tasks executed by workers."]]},{"children":[],"uri":"https://www.notion.so/ddc61dbca0a5473c9f16eaef1cd3432f","type":"bulleted_list","createdTime":1622463900000,"lastEditedTime":1622463900000,"title":[["Load balancing",[["b",null]]],[" : load balancer to process requests across all container in service.  "]]},{"children":[],"uri":"https://www.notion.so/fea17c987d4447d0967d1eceffd0e3fa","type":"heading","createdTime":1622639880000,"lastEditedTime":1622640360000,"title":[["Step 1: Initialise Swarm mode"]],"depth":3},{"children":[],"uri":"https://www.notion.so/424a38e0995545f29fd39011201a3d6e","type":"text","createdTime":1622640360000,"lastEditedTime":1622640480000,"title":[["After it Docker becomes manages by default, i.e. first node to initialize. New nodes join the cluster, they adjust their role between manager and workers."]]},{"children":[],"uri":"https://www.notion.so/a534b043c4d8401b8da58238b81c074f","type":"code","createdTime":1622640480000,"lastEditedTime":1622640840000,"title":[["# Initialise Swarm mode, it'll output init token which used to add additional nodes.\ndocker swarm init"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/357e0bb8408d4fda83639492e07615e9","type":"heading","createdTime":1622640300000,"lastEditedTime":1622640840000,"title":[["Step 2: Join Cluster"]],"depth":3},{"children":[],"uri":"https://www.notion.so/5a52c4555cf34bc8952396364bebb67b","type":"text","createdTime":1622640840000,"lastEditedTime":1622640900000,"title":[["Joining is done by pointing other host to current manager of cluster."]]},{"children":[],"uri":"https://www.notion.so/7eb7f466a74d4259ab693a59927fa0ec","type":"text","createdTime":1622640900000,"lastEditedTime":1622640900000,"title":[["Docker uses port 2377 for swarm managing."]]},{"children":[],"uri":"https://www.notion.so/aa1a07c294b54115958de14724baf74a","type":"text","createdTime":1622641140000,"lastEditedTime":1622641140000,"title":[["On second host,"]]},{"children":[],"uri":"https://www.notion.so/4f9ec1c6c60e4683b6a595876b71de2b","type":"code","createdTime":1622640900000,"lastEditedTime":1622641200000,"title":[["# first task to obtain token is to add worker to cluster\n# here we ask manager what's the token via `swarm join-token`\ntoken=$(ssh -o StrictHostKeyChecking=no 172.17.0.77 \"docker swarm join-token -q worker\") && echo $token\n# join the requesting access\ndocker swarm join 172.17.0.77:2377 --token $token\n# view nodes in cluster\ndocker node ls"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/97beca2997074a3692b08922ed4ac518","type":"heading","createdTime":1622641320000,"lastEditedTime":1622641320000,"title":[["Step 3: Create overlay network"]],"depth":3},{"children":[],"uri":"https://www.notion.so/a8dc3c6c093c48079075dd27d541e4c9","type":"text","createdTime":1622641320000,"lastEditedTime":1622641380000,"title":[["The overlay network used to enable containers on diff hosts to communicate, this is Virtual Extensible LAN (VXLAN)"]]},{"children":[],"uri":"https://www.notion.so/101ba1ec523347f6815da56504d3fb26","type":"code","createdTime":1622641380000,"lastEditedTime":1622641500000,"title":[["# create new overlay network called skynet, all container registered to this node can communicate with each other\ndocker network create -d overlay skynet"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/718a5534785b46cda7bede09f26c2646","type":"heading","createdTime":1622641500000,"lastEditedTime":1622641500000,"title":[["Step 4: Deploy service"]],"depth":3},{"children":[],"uri":"https://www.notion.so/a0b08a1e87914385b82569fe741b1402","type":"text","createdTime":1622641500000,"lastEditedTime":1622641500000,"title":[["Services used to run containers across the cluster, it allows to define how applications deployed at scale."]]},{"children":[],"uri":"https://www.notion.so/a1e8e23adbc64ae698d19203492dea97","type":"code","createdTime":1622641500000,"lastEditedTime":1622641680000,"title":[["# to ensure availablity, we run two replicas\ndocker service create --name http --network skynet --replicas 2 -p 80:80 docker-http-service\n# view running service\ndocker service ls"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/96874085263240d79744ff6524ff1e78","type":"heading","createdTime":1622641680000,"lastEditedTime":1622641680000,"title":[["Step 5: Inspect State"]],"depth":3},{"children":[],"uri":"https://www.notion.so/7715e03166954c82aca86b02bd588584","type":"text","createdTime":1622641680000,"lastEditedTime":1622641740000,"title":[["Inspect health and state of cluster and running applications."]]},{"children":[],"uri":"https://www.notion.so/327842e6bcec41c383eed4282edb0113","type":"code","createdTime":1622641740000,"lastEditedTime":1622641800000,"title":[["# view list of task with service across the cluster\ndocker service ps http\n# view details and config of service\ndocker service inspect --pretty http\n# on each node, self refers to manager node\ndocker node ps self"]],"language":"Bash","wrap":false},{"children":[],"uri":"https://www.notion.so/27c164f9bf6c428b8bf7cee9f62c80e7","type":"heading","createdTime":1622641920000,"lastEditedTime":1622642280000,"title":[["Step 6: Scale service"]],"depth":3},{"children":[],"uri":"https://www.notion.so/9698b380013a44f982aff5dfc26d8fa3","type":"text","createdTime":1622642280000,"lastEditedTime":1622642460000,"title":[["Service allows to scale many instances of running task across the cluster."]]},{"children":[],"uri":"https://www.notion.so/0e5c28276dea4b95b6a247c0550bcffb","type":"code","createdTime":1622642460000,"lastEditedTime":1622642460000,"title":[["# scale http service to running across five contianer\ndocker service scale http=5 "]],"language":"Bash","wrap":false}],"uri":"https://www.notion.so/1df4b6916d034aa6bdd79517b86d4351","type":"page","createdTime":1622317500000,"lastEditedTime":1622642640000,"title":[["KataCoda : Docker Foundations"]],"icon":"⏱️","fullWidth":false,"coverPosition":1,"properties":{"!`\"w":[["Yes"]],"98uZ":[["Documenting Katacoda learnings"]],":H`m":[["Yes"]],"{iD?":[["Docker"]],"|Ay0":[["post"]]}}